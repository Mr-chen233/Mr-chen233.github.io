<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>双指针</title>
    <link href="/2023/03/06/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    <url>/2023/03/06/%E5%8F%8C%E6%8C%87%E9%92%88/</url>
    
    <content type="html"><![CDATA[<h1 id="双指针"><a href="#双指针" class="headerlink" title="双指针"></a>双指针</h1><h2 id="一、概况"><a href="#一、概况" class="headerlink" title="一、概况"></a>一、概况</h2><ol><li>类型：快慢指针（相同方向循环），对撞指针（相反方向循环）、滑动窗口</li><li>用途：提高效率，通常能将O（n^2）的时间复杂度降为O（n）</li><li>可以应用的数据结构：<strong>数组、链表、字符串</strong></li><li>应用场景：<ul><li>要用到遍历、循环、双层for循环时，立马想到双指针法</li><li>普通双指针：反转链表、链表中的虚拟头结点法（这里归类可能不恰当）</li><li>快慢指针：删除重复元素或倒数第n个节点、判断链表是否有环、N数之和、</li><li>对撞指针：二分查找、翻转字符串等</li><li>滑动窗口：在数组或者链表某个连续的区间上的操作，比如求最长&#x2F;最短子字符串、长度最小子数组</li></ul></li></ol><h2 id="二、相关题目"><a href="#二、相关题目" class="headerlink" title="二、相关题目"></a>二、相关题目</h2><h3 id="（一）、对撞指针"><a href="#（一）、对撞指针" class="headerlink" title="（一）、对撞指针"></a>（一）、对撞指针</h3><ol><li><h4 id="剑指-Offer-57-和为s的两个数字"><a href="#剑指-Offer-57-和为s的两个数字" class="headerlink" title="剑指 Offer 57. 和为s的两个数字"></a><a href="https://leetcode.cn/problems/he-wei-sde-liang-ge-shu-zi-lcof/">剑指 Offer 57. 和为s的两个数字</a></h4><ul><li><p>题目要求：<img src="/2023/03/06/%E5%8F%8C%E6%8C%87%E9%92%88/image-20230306135958872.png" class="" title="image-20230306135958872"></p></li><li><p>思路：跟两数之和差不多，区别在于本题数组递增，所以可以考虑双指针</p></li><li><p>解法：</p><ul><li><p><strong>哈希表</strong>：遍历一次，第一次遍历时将数<code>x</code>存入，并判断<code>target - x</code>是否已在表中</p></li><li><p><strong>双指针</strong>：指针<code>i</code>、<code>j</code>分别置于首尾，若<code>nums[i] + nums[j] - target</code> 则<code>i++</code>，若<code>nums[i]+nums[j]&gt;target</code>则<code>j--</code></p></li></ul></li></ul></li></ol>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
      <category>Algorithms</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>双指针</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hot100-406-身高重建队列</title>
    <link href="/2023/03/01/hot100-406-%E8%BA%AB%E9%AB%98%E9%87%8D%E5%BB%BA%E9%98%9F%E5%88%97/"/>
    <url>/2023/03/01/hot100-406-%E8%BA%AB%E9%AB%98%E9%87%8D%E5%BB%BA%E9%98%9F%E5%88%97/</url>
    
    <content type="html"><![CDATA[<ul><li><p>题目</p>  <img src="/2023/03/01/hot100-406-%E8%BA%AB%E9%AB%98%E9%87%8D%E5%BB%BA%E9%98%9F%E5%88%97/image-20230301204934735.png" class="" title="image-20230301204934735"></li><li><p>小套路：<strong>一般这种数对，还涉及排序的，根据第一个元素正向排序，根据第二个元素反向排序，或者根据第一个元素反向排序，根据第二个元素正向排序，往往能够简化解题过程。</strong></p></li><li><p>思路：首先对数对进行排序，按照数对的元素 1 降序排序，按照数对的元素 2 升序排序。原因是，按照元素 1 进行降序排序，对于每个元素，在其之前的元素的个数，就是大于等于他的元素的数量，而按照第二个元素正向排序，我们希望 k 大的尽量在后面，减少插入操作的次数。</p></li><li><p>代码：</p>  <figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">static</span> <span class="hljs-type">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(<span class="hljs-type">const</span> vector&lt;<span class="hljs-type">int</span>&gt; a, <span class="hljs-type">const</span> vector&lt;<span class="hljs-type">int</span>&gt; b)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (a[<span class="hljs-number">0</span>] == b[<span class="hljs-number">0</span>]) <span class="hljs-keyword">return</span> a[<span class="hljs-number">1</span>] &lt; b[<span class="hljs-number">1</span>];<br>        <span class="hljs-keyword">return</span> a[<span class="hljs-number">0</span>] &gt; b[<span class="hljs-number">0</span>];<br>    &#125;<br>    vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; <span class="hljs-built_in">reconstructQueue</span>(vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt;&amp; people) &#123;<br>        <span class="hljs-built_in">sort</span> (people.<span class="hljs-built_in">begin</span>(), people.<span class="hljs-built_in">end</span>(), cmp);<br>        vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; que;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; people.<span class="hljs-built_in">size</span>(); i++) &#123;<br>            <span class="hljs-type">int</span> position = people[i][<span class="hljs-number">1</span>];<br>            que.<span class="hljs-built_in">insert</span>(que.<span class="hljs-built_in">begin</span>() + position, people[i]);<br>        &#125;<br>        <span class="hljs-keyword">return</span> que;<br>    &#125;<br>&#125;;<br><br></code></pre></td></tr></table></figure></li><li><p>注：此题应为贪心算法，今天第一次接触，所以是看了题解。希望过段时间能够自己独立解出。从这道题中还学到了出现一对的数据时的处理方法。23年3月1日。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
      <category>hot100</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>贪心算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>myFirstBlog</title>
    <link href="/2023/02/28/myFirstBlog/"/>
    <url>/2023/02/28/myFirstBlog/</url>
    
    <content type="html"><![CDATA[<h1 id="我的第一个博客"><a href="#我的第一个博客" class="headerlink" title="我的第一个博客"></a>我的第一个博客</h1><p>好吧，严格意义上并不是，之前在 CSDN 那已经发过几篇小记录了。</p><p>这篇文章主要用于记录一下，决定开始写些技术博客。虽然大多数估计只是一些八股之类的东西。蛮记录着吧。挺后悔之前学习的时候都没怎么记录了。从现在开始吧。</p><blockquote><p>栽一棵树最好的时间是十年前，其次是现在。</p></blockquote><p>顺便测试一下图片上传功能，整了一个晚上呢。</p><img src="/2023/02/28/myFirstBlog/image-20230228223507268.png" class="" title="image-20230228223507268">]]></content>
    
    
    
    <tags>
      
      <tag>hello</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/02/23/hello-world/"/>
    <url>/2023/02/23/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>hello</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
